'LORAN-C ROUTINE. REV 07-15-83. 1530 HOURS

N9=15 ' N9 = Number of master stations
C0=1/298.26
A0=-1
PI=4.*ATN(1)
TP=PI+PI
RD=PI/180
G$(1)=""

GOTO @PRINT_OPTIONS

@DEBUG
    PRINT "DEBUG":STOP
    RETURN

@PRESS_ANY_KEY
    ' FOR C=1 TO 9
    '     C$=INKEY$
    ' NEXT C
    PRINT
    PRINT "Press any key to continue."

@KEYPRESS
    C$=INKEY$
    IF C$="" THEN GOTO @KEYPRESS
    RETURN

@MATH_1
    X=INT(M0*X+.5)/M0
    RETURN

@MATH_2
    P=129.04398/T-.40758+.645765438E-3*T
    RETURN

@MATH_3
    P=2.7412979/T-.32774624E-3*T
    RETURN

@KEYPRESS_CAPITALIZED
    C$=INKEY$
    IF C$="" THEN GOTO @KEYPRESS_CAPITALIZED
    C=ASC(C$)
    C$=CHR$(C+32*(C>90))
    FOR C=1 TO LEN(C0$)
        IF C$=MID$(C0$,C,1) THEN RETURN
    NEXT C
    GOTO @KEYPRESS_CAPITALIZED
    CLS

@PRINT_OPTIONS
    PRINT "1-LORAN FIX      6-TWO PT HEAD & DIST"
    PRINT "2-ALT. SOLUTION  7-CALIBRATE"
    PRINT "3-DEST LAT/LON   8-NEW STA. IDs"
    PRINT "4-HEAD & DIST    9-ASF Correction"
    PRINT "5-PREDICT ITDs   A-STOP"
    PRINT
    PRINT "OPTION?"
    C0$="123456789A"
    GOSUB @KEYPRESS_CAPITALIZED
    CLS
    ON C GOSUB @OPT_1_ENTER_ITDS,@OPT_2_ALT_SOLUTION,@OPT_3_INPUT_DEST_LL,@OPT_4_HEAD_DIST_TO_DEST,@OPT_5_PREDICT_ITDS,@OPT_6_TWO_POINT_HEAD_DIST,@OPT_7_CALIBRATE,@OPT_8_NEW_STA_IDS,@OPT_9_ASF_CORRECTIONS,@EXIT
    GOTO @PRINT_OPTIONS

@CHECK_GRI
    IF G1$<>"" THEN RETURN

@OPT_8_NEW_STA_IDS
    F0=1
    N=1
    CLS
    INPUT "1st GRI";I$
    GOSUB @PARSE_GRI
    GOSUB @READ_DATA_RESET
    IF F0=2 THEN GOTO @OPT_8_NEW_STA_IDS

@INPUT_GRI_2
    F0=1
    N=2
    INPUT "2nd GRI";I$
    GOSUB @PARSE_GRI
    IF A$=I9$ THEN GOSUB @PROCESS_STATIONS:IF F0=1 THEN GOTO @SET_F1_F2
    GOSUB @READ_DATA_RESET
    IF F0=2 THEN GOTO @INPUT_GRI_2

@SET_F1_F2
    F1=1
    F2=1
    IF G1$=G2$ THEN GOTO @PARSE_GRI
    IF P(1,1)=P(1,2) AND L(1,1)+L(1,2) THEN GOTO @DO_WORK
    F2=-1
    IF P(1,1)=P(2,2) AND L(1,1)+L(2,2) THEN GOTO @DO_WORK
    F1=-1
    IF P(2,1)=P(2,2) AND L(2,1)+L(2,2) THEN GOTO @DO_WORK
    F2=2
    IF P(2,1)=P(1,2) AND L(2,1)+L(1,2) THEN GOTO @DO_WORK

@GRI_ERROR
    PRINT "ERROR: NO TRIPLET."
    GOSUB @PRESS_ANY_KEY
    GOTO @OPT_8_NEW_STA_IDS

@DO_WORK
    PRINT
    PRINT "Working"
    FOR I=1 TO 2
        P1=P(1,I)
        L1=L(1,I)
        P2=P(2,I)
        L2=L(2,I)
        GOSUB @SETUP_VARIABLES
    NEXT I
    G(1)=0
    G(2)=0
    RETURN

@SETUP_VARIABLES
    GOSUB @REVERSE_SOLUTION
    B(I)=S0
    Z(1,I)=Z1
    Z(2,I)=Z2

@MATH_4
    T=21282.3593*S0
    IF T>=537 THEN GOSUB @MATH_2
    IF T<537 THEN GOSUB @MATH_3
    T(I)=T+P
    RETURN

@PARSE_GRI
    L=LEN(I$)
    A$=LEFT$(I$,L-1)
    B$=RIGHT$(I$,1)
    B=ASC(B$)
    B$=CHR$(B+32*(B>90))
    RETURN

@READ_DATA_RESET
    N8=1
    RESTORE

@READ_DATA
    READ I9$,N0,P0,L0
    FOR I=1 TO N0
        READ W$(I),D9(I),P1(I),L1(I)
    NEXT I
    IF I9$<>A$ THEN GOTO @INCREMENT_INDEX
    GOSUB @PROCESS_STATIONS
    IF F0=2 THEN GOTO @ERROR_CHAIN_NOT_FOUND
    RETURN

@INCREMENT_INDEX
    N8=N8+1
    IF N8<=N9 THEN GOTO @READ_DATA

@ERROR_CHAIN_NOT_FOUND
    PRINT I$;" IS NOT CATALOGED"
    F0=2
    GOSUB @PRESS_ANY_KEY
    RETURN

@PROCESS_STATIONS
    FOR I=1 TO N0
        IF W$(I)=B$ THEN GOTO @SET_GRI_1_2
    NEXT I
    F0=2
    RETURN

@SET_GRI_1_2
    IF N=1 THEN G1$=I$:G$(1)=I$
    IF N=2 THEN G2$=I$:G$(2)=I$
    D(N)=D9(I)
    X=P0
    GOSUB @USE_ACOS_QATN
    P(1,N)=X
    X=L0
    GOSUB @ACOS
    L(1,N)=V*RD
    X=P1(I)
    GOSUB @USE_ACOS_QATN
    P(2,N)=X
    X=L1(I)
    GOSUB @ACOS
    L(2,N)=V*RD
    RETURN

@EXIT
    END

@DIRECT_SOLUTION
    Z8=SIN(Z1)
    Z9=COS(Z1)
    P8=SIN(P1)
    P9=COS(P1)
    M=-Z8*P9
    C1=C0*M
    C2=C0*(1-M*M)/4
    D=(1-C2)*(1-C2-C1*M)
    P=C2*(1+C1*M/2)/D
    N=P9*Z9
    YY=N
    XX=P8
    GOSUB @MOD_FN
    S1=AN
    D0=S0/D
    U=2*(S1-D0)
    W=1-2*P*COS(U)
    V=COS(U+D0)
    X=C2*C2*SIN(D0)*COS(D0*(2*V*V-1))
    Y=2*P*V*W*SIN(D0)
    S2=D0+X-Y
    S8=SIN(S2)
    S9=COS(S2)
    K=SQR(M*M+(N*S9-P8*S8)^2)
    P2=ATN((P8*S9+N*S8)/K)
    YY=-S8*Z8
    XX=P9*S9-P8*S8*Z9
    GOSUB @MOD_FN
    S3=AN
    H=C1*(1-C2)*S2-C1*C2*S8*COS(S1+S1-S2)
    L2=L1+S3-H
    YY=-M
    XX=-(N*S9-P8*S8)
    GOSUB @MOD_FN
    Z2=AN
    RETURN

@REVERSE_SOLUTION
    L3=L2-L1
    P3=(P2-P1)/2
    P4=(P1+P2)/2
    P6=SIN(P3)
    P7=COS(P3)
    P8=SIN(P4)
    P9=COS(P4)
    H=P7*P7-P8*P8
    L=P6*P6+H*SIN(L3/2)^2
    XX=SQR(L)
    GOSUB @SET_ZZ_AND_AN
    D0=2*AN
    U=2*P8*P8*P7*P7/(1-L)
    V=2*P6*P6*P9*P9/L
    X=U+V
    Y=U-V
    T=D0/SIN(D0)
    D=4*T*T
    E=2*COS(D0)
    A=D*E
    C=T-(A-E)/2
    N1=X*(A+C*X)
    B=D+D
    N2=Y*(B+E*Y)
    N3=D*X*Y
    D2=C0*C0*(N1-N2+N3)/64
    D1=C0*(T*X-Y)/4
    S0=(T-D1+D2)*SIN(D0)
    M=32*T-(20*T-A)*X-(B+4)*Y
    F=Y+Y-E*(4-X)
    G=C0*(T/2+C0*M/64)
    Q=-F*G*TAN(L3)/4
    L4=(L3+Q)/2
    L8=SIN(L4)
    L9=COS(L4)
    YY=P6*L9
    XX=P9*L8
    GOSUB @MOD_FN
    T1=AN
    YY=-P7*L9
    XX=P8*L8
    GOSUB @MOD_FN
    T2=AN
    M0=TP
    X=T1+T2
    GOSUB @MOD_FN_SETUP
    Z1=X
    X=T1-T2
    GOSUB @MOD_FN_SETUP
    Z2=X
    RETURN

@FIXING_ROUTINE
    A1=F1*SIN(A(1))
    B1=COS(A(1))-COS(B(1))
    C1=SIN(B(1))
    A2=F2*SIN(A(2))
    B2=COS(A(2))-COS(B(2))
    C2=SIN(B(2))
    E1=Z(1,1)
    IF F1=-1 THEN E1=Z(2,1)
    E2=Z(1,2)
    IF F2=-1 THEN E2=Z(2,2)
    C=B1*C2*COS(E2)-B2*C1*COS(E1)
    S=B1*C2*SIN(E2)-B2*C1*SIN(E1)
    K=B2*A1-B1*A2
    R=SQR(C*C+S*S)
    YY=S
    XX=C
    GOSUB @MOD_FN
    G=AN
    XX=K/R
    GOSUB @ASIN
    Z=G+A0*AN
    YY=B2
    XX=C2*COS(Z-E2)+A2
    GOSUB @MOD_FN
    S0=AN
    IF F2=1 THEN P1=P(1,2):L1=L(1,2)
    IF F2=-1 THEN P1=P(2,2):L1=L(2,2)
    Z1=Z
    GOSUB @DIRECT_SOLUTION
    P0=P2
    L0=L2
    P=ATN(TAN(P0)/(1-C0))
    P=P/RD
    X=L0/RD
    M0=360
    GOSUB @MOD_FN_SETUP
    L=X
    IF L>180 THEN L=L-360
    X=P
    GOSUB @BUILD_STRING
    P$=C$
    X=L
    GOSUB @BUILD_STRING
    PRINT
    PRINT "LAT  = ";P$
    PRINT "LONG = ";C$
    RETURN

@OPT_1_ENTER_ITDS
    GOSUB @CHECK_GRI
    CLS
    FOR I=1 TO 2
        PRINT "ITD FOR ";G$(I);
        INPUT A
        A=A+G(I)-D(I)-T(I)
        IF ABS(A)<T(I) THEN GOTO @ITD_VALID_CONTINUE
        PRINT "ITD NOT VALID FOR ";G$(I)
        GOSUB @PRESS_ANY_KEY

@ITD_VALID_CONTINUE
        A(I)=A/21295.8736
    NEXT I
    GOSUB @FIXING_ROUTINE
    GOSUB @PRESS_ANY_KEY
    RETURN

@OPT_2_ALT_SOLUTION
    IF A0=1 THEN A0=-1:GOTO @SKIP_SET_A0
    A0=0

@SKIP_SET_A0
    GOSUB @FIXING_ROUTINE
    GOSUB @PRESS_ANY_KEY
    RETURN

@OPT_6_TWO_POINT_HEAD_DIST
    CLS
    INPUT "ORIGIN LAT    dd.mmss ";P
    INPUT "ORIGIN LONG   ddd.mmss";L
    X=P
    GOSUB @USE_ACOS_QATN
    P0=X
    X=L
    GOSUB @ACOS
    L0=V*RD
    GOSUB @OPT_3_INPUT_DEST_LL
    GOSUB @OPT_4_HEAD_DIST_TO_DEST
    RETURN

@OPT_3_INPUT_DEST_LL
    CLS
    INPUT "DEST LAT      dd.mmss";P
    INPUT "DEST LONG     ddd.mmss";L
    X=P
    GOSUB @USE_ACOS_QATN
    P5=X
    X=L
    GOSUB @ACOS
    L5=V*RD
    RETURN

@OPT_4_HEAD_DIST_TO_DEST
    P1=P0
    L1=L0
    P2=P5
    L2=L5
    GOSUB @REVERSE_SOLUTION
    M0=360
    X=Z1/RD
    GOSUB @MOD_FN_SETUP
    GOSUB @BUILD_STRING
    CLS
    PRINT "HEADING = ";C$
    M0=100
    X=3443.917*S0
    GOSUB @MATH_1
    PRINT "DISTANCE = ";X;" n. mi."
    GOSUB @PRESS_ANY_KEY
    RETURN

@OPT_5_PREDICT_ITDS
    GOSUB @CHECK_GRI
    GOSUB @INPUT_LAT_LON_DM
    PRINT
    FOR K=1 TO 2
        I9=T(K)+D(K)
        P2=P(2,K)
        L2=L(2,K)
        GOSUB @REVERSE_SOLUTION
        I=3
        GOSUB @MATH_4
        I9=I9+T(3)
        P2=P(1,K)
        L2=L(1,K)
        GOSUB @REVERSE_SOLUTION
        I=3
        GOSUB @MATH_4
        I9=I9-T(3)
        M0=100
        X=I9
        GOSUB @MATH_1
        1130 PRINT "ITD FOR ";G$(K);" = ";X
    NEXT K
    PRINT
    PRINT "New lat/long or Return to menu?"
    C0$="NR"
    GOSUB @KEYPRESS_CAPITALIZED
    IF C=1 THEN GOTO @OPT_5_PREDICT_ITDS
    RETURN

@INPUT_LAT_LON_DM
    CLS
    INPUT "LAT dd.mmss";P1
    INPUT "LONG ddd.mmss";L1
    X=P1
    GOSUB @USE_ACOS_QATN
    P1=X
    X=L1
    GOSUB @ACOS
    L1=V*RD
    RETURN

@OPT_7_CALIBRATE
    GOSUB @CHECK_GRI
    GOSUB @INPUT_LAT_LON_DM
    FOR K=1 TO 2
        I$=G1$
        IF K=2 THEN I$=G2$
        CLS
        PRINT "ITD FOR ";I$;
        INPUT I9
        I9=I9-D(K)
        P2=P(2,K)
        L2=L(2,K)
        GOSUB @REVERSE_SOLUTION
        I=3
        GOSUB @MATH_4
        I9=I9-T(3)
        P2=P(1,K)
        L2=L(1,K)
        GOSUB @REVERSE_SOLUTION
        I=3
        GOSUB @MATH_4
        T(K)=I9+T(3)+G(K)
    NEXT K
    RETURN

@MOD_FN_SETUP
    X=X-M0*INT(X/M0)

@MOD_FN
    AN=ATN(YY/(XX-1E-9*(XX=0)))-PI*(XX<0)
    RETURN

@QATN
    X=ATN((1-C0)*TAN(X))
    RETURN

@BUILD_STRING
    C$=" "
    IF X<0 THEN C$="-":X=-X
    X=X+1/7200
    X0=INT(X)
    C$=C$+STR$(X0)+" "
    X=60*(X-X0)
    X0=INT(X)
    X$=STR$(100+X0)
    C$=C$+RIGHT$(X$,2)+" "
    X=60*(X-X0)
    X0=INT(X)
    X$=STR$(100+X0)
    C$=C$+RIGHT$(X$,2)+" "
    RETURN

@OPT_9_ASF_CORRECTIONS
    GOSUB @CHECK_GRI
    CLS
    PRINT "ASF FOR ";G$(1);INPUT G(1)
    PRINT "ASF FOR ";G$(2);INPUT G(2)
    RETURN

@SET_ZZ_AND_AN
    ZZ=SQR(1-XX*XX)
    AN=ATN(XX/(ZZ-1E-9*(ZZ=0)))
    RETURN

@ASIN
    AN=ATN(SQR(1-XX*XX)/(XX-1E-9*(XX=0)))-PI*(XX<0)
    RETURN

@ACOS
    S=SGN(X)
    X=ABS(X)
    H=INT(X)
    M0=1
    GOSUB @MOD_FN_SETUP
    V=X*100
    X=V
    GOSUB @MOD_FN_SETUP
    V=S*((100*X/60+INT(V))/60+H)
    RETURN

@USE_ACOS_QATN
    GOSUB @ACOS
    X=V*RD
    GOSUB @QATN
    RETURN

DATA "4990",2,16.444395,169.30312,"X",11000,20.144916,155.53097
DATA "Y",29000,28.234177,178.17302
DATA "5930",2,46.4827199,67.5537713,"X",11000,41.151193,69.583909
DATA "Y",25000,46.46463218,53.102816
DATA "5970",3,36.1105797,-129.2027279,"W",11000,42.4437104,-143.4309245
DATA "X",31000,35.0223871,-126.322674,"Z",42000,263624975,-128.0856445
DATA "5990",3,51.575878,122.220224,"X",11000,55.2620851,131.1519648
DATA "Y",27000,47.034799,119.443953,"Z",41000,50.3629731,127.2129043
DATA "7930",3,59.591727,45.102747,"W",11000,64.542658,23.552175
DATA "X",21000,62.175964,7.042658,"Z",43000,46.463218,53.102816
DATA "*7930",3,24.1707888,-153.5853232,"X",11000,42.4437104,-143.4309245
DATA "Y",30000,26.3624975,-128.856445,"Z",49000,9.3245789,-138.095497
DATA "7960",2,63.1942814,142.48319,"X",11000,57.262021,152.2211225
DATA "Y",26000,55.2620851,131.1519648
DATA "7970",4,62.175964,7.0426538,"W",26000,54.4829872,-8.1736312
DATA "X",11000,68.380615,-14.2747,"Y",46000,64.542658,23.552175
DATA "Z",60000,70.545261,8.435869
DATA "7980",4,30.593874,85.1009305,"W",11000,30.4333018,90.49436
DATA "X",23000,26.3155006,97.5000093,"Y",43000,27.0158393,80.0653429
DATA "Z",59000,34.0346081,77.5446654
DATA "7990",3,38.5220587,-16.4306159,"X",11000,35.3120787,-12.3130245
DATA "Y",29000,40.582095,-27.520152,"Z",47000,42.0336515,-3.1215512
DATA "8970",3,39.510754,87.291214,"W",11000,30.593874,85.1009305
DATA "X",28000,42.4250603,76.4933862,"Y",44000,48.3649844,94.331846
DATA "9940",3,39.3306621,118.495637,"W",11000,47.034799,119.443953
DATA "X",27000,38.465699,122.2944529,"Y",40000,35.191818,114.4817435
DATA "9960",4,42.4250603,76.4933862,"W",11000,46.4827199,67.5537713
DATA "X",25000,41.151193,69.583909,"Y",39000,34.0346081,77.5446654
DATA "Z",54000,39.510754,87.291214
DATA "9970",4,24.4803597,-141.1930303,"W",11000,24.1707888,-153.5853232
DATA "X",30000,42.4437104,-143.4309245,"Y",55000,26.3624975,-128.0856445
DATA "Z",75000,9.3245789,-138.095497
DATA "9990",3,57.091265,17.1506789,"X",11000,52.494404,-173.1048974
DATA "Y",29000,65.1440306,166.531255,"Z",43000,57.262021,152.2211225